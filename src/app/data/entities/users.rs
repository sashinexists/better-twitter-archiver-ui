//! SeaORM Entity. Generated by sea-orm-codegen 0.8.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "users")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: i64,
    pub name: String,
    pub username: String,
    pub description: String,
}

impl Model {
    pub fn to_twitter_user(&self) -> twitter_v2::User {
        twitter_v2::User {
            id: twitter_v2::id::NumericId::new(self.id.try_into().unwrap()),
            name: self.name.clone(),
            username: self.username.clone(),
            created_at: None,
            description: Some(self.description.clone()),
            entities: None,
            location: None,
            pinned_tweet_id: None,
            profile_image_url: None,
            protected: None,
            public_metrics: None,
            url: None,
            verified: None,
            withheld: None,
        }
    }
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::tweets::Entity")]
    Tweets,
}

impl Related<super::tweets::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Tweets.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
